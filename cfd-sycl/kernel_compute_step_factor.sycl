	const int i = item.get_global_id(0);
	if( i >= nelr) return;

	float density = variables_acc[i + VAR_DENSITY*nelr];
	Float3 momentum;
	momentum.x = variables_acc[i + (VAR_MOMENTUM+0)*nelr];
	momentum.y = variables_acc[i + (VAR_MOMENTUM+1)*nelr];
	momentum.z = variables_acc[i + (VAR_MOMENTUM+2)*nelr];
	
	float density_energy = variables_acc[i + VAR_DENSITY_ENERGY*nelr];
	
	Float3 velocity;       compute_velocity(density, momentum, &velocity);
	float speed_sqd      = compute_speed_sqd(velocity);

	float pressure       = compute_pressure(density, density_energy, speed_sqd);
	float speed_of_sound = compute_speed_of_sound(density, pressure);
	step_factors_acc[i] = (float)(0.5f) / (sycl::sqrt(areas_acc[i]) * (sycl::sqrt(speed_sqd) + speed_of_sound));

